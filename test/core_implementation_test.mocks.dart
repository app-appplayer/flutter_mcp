// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_mcp/test/core_implementation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mcp_client/src/transport/transport.dart' as _i2;
import 'package:mcp_server/src/transport/transport.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ClientTransport].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientTransport extends _i1.Mock implements _i2.ClientTransport {
  MockClientTransport() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<dynamic> get onMessage => (super.noSuchMethod(
        Invocation.getter(#onMessage),
        returnValue: _i3.Stream<dynamic>.empty(),
      ) as _i3.Stream<dynamic>);

  @override
  _i3.Future<void> get onClose => (super.noSuchMethod(
        Invocation.getter(#onClose),
        returnValue: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void send(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #send,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ServerTransport].
///
/// See the documentation for Mockito's code generation for more information.
class MockServerTransport extends _i1.Mock implements _i4.ServerTransport {
  MockServerTransport() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<dynamic> get onMessage => (super.noSuchMethod(
        Invocation.getter(#onMessage),
        returnValue: _i3.Stream<dynamic>.empty(),
      ) as _i3.Stream<dynamic>);

  @override
  _i3.Future<void> get onClose => (super.noSuchMethod(
        Invocation.getter(#onClose),
        returnValue: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void send(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #send,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
